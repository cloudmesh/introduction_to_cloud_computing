Example: Mongodb with sqlite3 as a Backend
==========================================================================

Description: Installing MongoDB 2.6
--------------------------------------------------------------------------

This is an example of how to use mongodb as a backend.  

.. note::
	This example can also be seen at http://petrkout.com/linux/installing-mongodb-2-6-and-setting-up-root-user-login/
	
1. Install MongoDB public GPG key::
	
	sudo apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv 7F0CEB10
	
2. Create list file for apt-get::
	
	echo 'deb http://downloads-distro.mongodb.org/repo/ubuntu-upstart dist 10gen' | sudo tee /etc/apt/sources.list.d/mongodb.list
	
3. Update package database::
	
	sudo apt-get update
	
4. Install MongoDB::
	
	sudo apt-get install mongodb-org
	
Now that the database is installed, create your authentication by typing the following::
	
	mongo
	use admin
	db.createUser({user:"admin", pwd:"secret_password", roles:[{role:"root", db:"admin"}]})
	exit
	texteditor /etc/mongod.conf
	(uncomment ``#auth = true``)
	
.. note::
	For "admin", & "secret_password", you can put whatever you want for the fields
	
Now save the file and restart MongoDB::
	
	sudo service mongod restart

And log into the admin database::
	
	mongo -u admin -p secret_password --authenticationDatabase admin
	
	
Description: Setting up Django with MongoDB
-------------------------------------------------------------------------

.. note::
	This example can also be seen at 
	http://petrkout.com/programming/setting-up-django-with-mongodb/
	
Start with this command in your project (make sure you have created an app as well)::
	
	pip install mongoengine
	
Now go into your ``settings.py`` in your project's directory and make sure it looks like this::
	
	
	INSTALLED_APPS (
		.....
		.....
		'your_created_app',
	)
	.............
	DATABASES = {
		'default': {
			'ENGINE': 'django.db.backends.sqlite3',
			'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
			   }
		     }
	
	from mongoengine import connect
	connect('employeedb', username='your_username', password='your_password')
	
	SESSION_ENGINE = 'mongoengine.django.sessions'
	SESSION_SERIALIZER = 'mongoengine.django.sessions.BSONSerializer'
	
	
.. note::
	Make sure you have ``'django.contrib.sessions.middleware.SessionMiddleware'`` in ``MIDDLEWARE_CLASSES`` & ``'django.contrib.sessions'`` in ``INSTALLED_APPS``.
	
	
Now go into your project and create an object in the ``models.py`` file in the app directory. Here is an example::
	
	from django.db import models
	from mongoengine import *

	# Create your models here.

	class Employee(Document):
		email = StringField(required=True)
		first_name = StringField(max_length=50)
		last_name = StringField(max_length=50)
		
Now go into your ``views.py`` file in your app directory and do the following::
	
	from django.shortcuts import render
	from models import Employee

	# Create your views here.

	def index(request):
		employee = Employee.objects.create(
			email="pedro.kong@company.com",
			first_name="Pedro",
			last_name="Kong"
		)
		employee.save()
		return render(request, 'core/index.html', {})
		
.. note::
	``'core/index.html'`` is a path to the templates directory that you should have in your project. If you do not have it, create a templates directory and in make sure you have a ``base.html`` file and another html file that extends in the beginning. i.e. ``{% extends "base.hmtl" %}``.
	
Then go to the URL, in this case when you do ``python manage.py runserver`` you should get the ``http://127.0.0.1.8000/`` link and open that and type ``index`` after it. 

Now open another tutorial window and do the following commands in your project's directory::
	
	mongo
	use employeedb
	db.addUser({user:"you_username", pwd:"your_password", roles:[{role:"root", db:"admin"}]})
	
Exit the mongo shell and do a::
	
	sudo service mongod restart
	
Then go back into the mongo shell and type in ``db.employee.find()`` you should see how many times the record is generated by how many times you have viewed the URL http://127.0.0.1.8000/index .



Ready Made Example
-----------------------------------------------------------------------
A ready made example for you is contained in the directory
``management/django/mongo2``. Please cd into the directory.

.. note::
	Because the Makefile is connected to a Ready Made Example, the user is ``"admin1"`` and the password is ``"mongo2"`` when you have to access the employeedb in the mongo shell. 

In this directory you will also find a Makefile that you can use to
execute the above steps. To start the server, you can say::

  make start

To view the web pages, say::

  make view

In case you need to recreate the server please say::

  make create

To cleanup you say::

  make clean

To stop the server please say::

  make stop

The steps are implicitly included in the makefile

.. include:: ../../../django/mongo2/Makefile
   :literal:
  
.. error::
   BUG THE MAGEFILE DOES NOT SHOW
